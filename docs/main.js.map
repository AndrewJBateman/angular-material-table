{"version":3,"sources":["./src/app/data-table/data-table-datasource.ts","./src/app/main-nav/main-nav.component.ts","./src/app/main-nav/main-nav.component.html","./src/app/data-table/data-table.component.ts","./src/app/data-table/data-table.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/$_lazy_route_resource lazy namespace object","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// The Matsort directive is used to listen for sorting changes and change the order of the data.\r\n\r\nimport { DataSource } from \"@angular/cdk/collections\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Observable, of as observableOf, merge } from \"rxjs\";\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface DataTableItem {\r\n  name: string;\r\n  id: number;\r\n  weight: number;\r\n  symbol: string;\r\n  amount: number;\r\n}\r\n\r\n// TODO: replace this with real data\r\nconst EXAMPLE_DATA: DataTableItem[] = [\r\n  { id: 1, name: \"Hydrogen\", weight: 1.0079, symbol: \"H\", amount: 10 },\r\n  { id: 2, name: \"Helium\", weight: 4.0026, symbol: \"He\", amount: 10 },\r\n  { id: 3, name: \"Lithium\", weight: 6.941, symbol: \"Li\", amount: 10 },\r\n  { id: 4, name: \"Beryllium\", weight: 9.0122, symbol: \"Be\", amount: 10 },\r\n  { id: 5, name: \"Boron\", weight: 10.811, symbol: \"B\", amount: 10 },\r\n  { id: 6, name: \"Carbon\", weight: 12.0107, symbol: \"C\", amount: 10 },\r\n  { id: 7, name: \"Nitrogen\", weight: 14.0067, symbol: \"N\", amount: 10 },\r\n  { id: 8, name: \"Oxygen\", weight: 15.9994, symbol: \"O\", amount: 10 },\r\n  { id: 9, name: \"Fluorine\", weight: 18.9984, symbol: \"F\", amount: 10 },\r\n  { id: 10, name: \"Neon\", weight: 20.1797, symbol: \"Ne\", amount: 10 },\r\n  { id: 11, name: \"Sodium\", weight: 22.9897, symbol: \"Na\", amount: 10 },\r\n  { id: 12, name: \"Magnesium\", weight: 24.305, symbol: \"Mg\", amount: 10 },\r\n  { id: 13, name: \"Aluminum\", weight: 26.9815, symbol: \"Al\", amount: 10 },\r\n  { id: 14, name: \"Silicon\", weight: 28.0855, symbol: \"Si\", amount: 10 },\r\n  { id: 15, name: \"Phosphorus\", weight: 30.9738, symbol: \"P\", amount: 10 },\r\n  { id: 16, name: \"Sulfur\", weight: 32.065, symbol: \"S\", amount: 10 },\r\n  { id: 17, name: \"Chlorine\", weight: 35.453, symbol: \"Cl\", amount: 10 },\r\n  { id: 18, name: \"Argon\", weight: 39.948, symbol: \"Ar\", amount: 10 },\r\n  { id: 19, name: \"Potassium\", weight: 39.0983, symbol: \"K\", amount: 10 },\r\n  { id: 20, name: \"Calcium\", weight: 40.078, symbol: \"Ca\", amount: 10 },\r\n];\r\n\r\n// const EXAMPLE_DATA: DataTableItem[] = [\r\n//   {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\r\n//   {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\r\n//   {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\r\n//   {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\r\n//   {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\r\n//   {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\r\n//   {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\r\n//   {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\r\n//   {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\r\n//   {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\r\n//   {position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na'},\r\n//   {position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg'},\r\n//   {position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al'},\r\n//   {position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si'},\r\n//   {position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P'},\r\n//   {position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S'},\r\n//   {position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl'},\r\n//   {position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar'},\r\n//   {position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K'},\r\n//   {position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca'},\r\n// ];\r\n\r\n/**\r\n * Data source for the DataTable view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class DataTableDataSource extends DataSource<DataTableItem> {\r\n  data: DataTableItem[] = EXAMPLE_DATA;\r\n\r\n  constructor(private paginator: MatPaginator, private sort: MatSort) {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<DataTableItem[]> {\r\n    // Combine everything that affects the rendered data into one update\r\n    // stream for the data-table to consume.\r\n    // array\r\n    const dataMutations = [\r\n      observableOf(this.data),\r\n      this.paginator.page,\r\n      this.sort.sortChange,\r\n    ];\r\n\r\n    // Set the paginator's length\r\n    this.paginator.length = this.data.length;\r\n\r\n    // transform array into a sorted copy\r\n    return merge(...dataMutations).pipe(\r\n      map(() => {\r\n        return this.getPagedData(this.getSortedData([...this.data]));\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect() {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: DataTableItem[]) {\r\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n    return data.splice(startIndex, this.paginator.pageSize);\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: DataTableItem[]) {\r\n    if (!this.sort.active || this.sort.direction === \"\") {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort.direction === \"asc\";\r\n      switch (this.sort.active) {\r\n        case \"name\":\r\n          return compare(a.name, b.name, isAsc);\r\n        case \"id\":\r\n          return compare(+a.id, +b.id, isAsc);\r\n        default:\r\n          return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: any, b: any, isAsc: boolean) {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { BreakpointObserver, Breakpoints } from \"@angular/cdk/layout\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Component({\r\n  // tslint:disable-next-line: component-selector\r\n  selector: \"main-nav\",\r\n  templateUrl: \"./main-nav.component.html\",\r\n  styleUrls: [\"./main-nav.component.css\"],\r\n})\r\nexport class MainNavComponent {\r\n  isHandset$: Observable<boolean> = this.breakpointObserver\r\n    .observe(Breakpoints.Handset)\r\n    .pipe(map((result) => result.matches));\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver) {}\r\n}\r\n","<mat-sidenav-container class=\"sidenav-container\">\r\n  <mat-sidenav\r\n    #drawer\r\n    class=\"sidenav\"\r\n    fixedInViewport=\"true\"\r\n    [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\r\n    [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\r\n    [opened]=\"!(isHandset$ | async)\"\r\n  >\r\n    <mat-toolbar color=\"primary\">Menu</mat-toolbar>\r\n    <mat-nav-list>\r\n      <a mat-list-item href=\"#\">Side Link 1</a>\r\n      <a mat-list-item href=\"#\">Side Link 2</a>\r\n      <a mat-list-item href=\"#\">Side Link 3</a>\r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n    <mat-toolbar color=\"primary\">\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"Toggle sidenav\"\r\n        mat-icon-button\r\n        (click)=\"drawer.toggle()\"\r\n        *ngIf=\"isHandset$ | async\"\r\n      >\r\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\r\n      </button>\r\n      <span>angular-material-table</span>\r\n      <span class=\"spacer\"></span>\r\n      <a href=\"#\">Link 1</a>\r\n      <a href=\"#\">Link 2</a>\r\n      <a href=\"#\">Link 3</a>\r\n    </mat-toolbar>\r\n    <ng-content></ng-content>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { DataTableDataSource } from \"./data-table-datasource\";\r\n\r\n@Component({\r\n  selector: \"app-data-table\",\r\n  templateUrl: \"./data-table.component.html\",\r\n  styleUrls: [\"./data-table.component.css\"],\r\n})\r\nexport class DataTableComponent implements OnInit {\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  dataSource: DataTableDataSource;\r\n\r\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\r\n  displayedColumns = [\"id\", \"name\", \"amount\"];\r\n\r\n  ngOnInit() {\r\n    this.dataSource = new DataTableDataSource(this.paginator, this.sort);\r\n  }\r\n\r\n  onRowClicked(row) {\r\n    console.log(\"Row clicked: \", row);\r\n  }\r\n}\r\n","<!-- Data passed to the mat-table component using the dataSource input.\r\nMat-sort header is used to allow each column to be sorted in asc or desc order -->\r\n<div class=\"mat-elevation-z8 data-table\">\r\n  <table\r\n    mat-table\r\n    class=\"full-width-table\"\r\n    [dataSource]=\"dataSource\"\r\n    matSort\r\n    aria-label=\"Elements\"\r\n  >\r\n    <!-- Id Column -->\r\n    <ng-container matColumnDef=\"id\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.name }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Amount Column -->\r\n    <ng-container matColumnDef=\"amount\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Amount</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{ row.amount }}</td>\r\n    </ng-container>\r\n\r\n    <!-- Sticky header added, onRowClick function added -->\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n    <tr\r\n      mat-row\r\n      *matRowDef=\"let row; columns: displayedColumns\"\r\n      (click)=\"onRowClicked(row)\"\r\n    ></tr>\r\n  </table>\r\n\r\n  <!-- Add a paginator -->\r\n  <mat-paginator\r\n    #paginator\r\n    [length]=\"dataSource.data.length\"\r\n    [pageIndex]=\"0\"\r\n    [pageSize]=\"50\"\r\n    [pageSizeOptions]=\"[25, 50, 100, 250]\"\r\n  >\r\n  </mat-paginator>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.css\"],\r\n})\r\nexport class AppComponent {\r\n  title = \"angular-material-table\";\r\n}\r\n","<main-nav>\r\n  <app-data-table></app-data-table>\r\n</main-nav>\r\n\r\n","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatListModule } from \"@angular/material/list\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\r\nimport { MatSortModule } from \"@angular/material/sort\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\n\r\nimport { AppComponent } from \"./app.component\";\r\nimport { MainNavComponent } from \"./main-nav/main-nav.component\";\r\nimport { LayoutModule } from \"@angular/cdk/layout\";\r\nimport { DataTableComponent } from \"./data-table/data-table.component\";\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, MainNavComponent, DataTableComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    LayoutModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import { enableProdMode } from \"@angular/core\";\r\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\r\n\r\nimport { AppModule } from \"./app/app.module\";\r\nimport { environment } from \"./environments/environment\";\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch((err) => console.error(err));\r\n"],"sourceRoot":"webpack:///"}